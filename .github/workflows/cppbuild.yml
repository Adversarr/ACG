name: cpp-build
on: [push]

jobs:
  ubuntu-job:
    runs-on: ubuntu-latest
    steps:
      - name: install Vulkan
        run: |
          sudo apt update && sudo apt install libeigen3-dev cmake
          mkdir -p $HOME/Downloads
          mkdir -p $HOME/tools
          wget -q -P $HOME/Downloads https://sdk.lunarg.com/sdk/download/1.3.236.0/linux/vulkansdk-linux-x86_64-1.3.236.0.tar.gz
          tar xf $HOME/Downloads/vulkansdk-linux-x86_64-1.3.236.0.tar.gz --directory=$HOME/tools/
          source $HOME/tools/1.3.236.0/setup-env.sh
          echo "Vulkan sdk path = $VULKAN_SDK"
      - uses: actions/checkout@v3
      - run: git submodule update --init --remote --recursive

      # Install latest CMake.
      - uses: lukka/get-cmake@latest

      # Restore from cache the previously built ports. If a "cache miss" occurs,
      # then vcpkg is bootstrapped. Since a the vcpkg.json is being used later on
      # to install the packages when `run-cmake` runs, no packages are installed at
      # this time.
      - name: Restore artifacts, or setup vcpkg (do not install any package)
        uses: lukka/run-vcpkg@v10
        with:
          # This is the default location of the directory containing vcpkg sources.
          # Change it to the right location if needed.
          vcpkgDirectory: '${{ github.workspace }}/vcpkg'

          # If not using a submodule for vcpkg sources, this specifies which commit
          # id must be checkout from a Git repo. It must not set if using a submodule
          # for vcpkg.
          # vcpkgGitCommitId: '${{ matrix.vcpkgCommitId }}'

          # This is the glob expression used to locate the vcpkg.json and add its
          # hash to the cache key. Change it to match a single manifest file you want
          # to use. 
          # Note: do not use `${{ github.context }}` to compose the value as it 
          # contains backslashes that would be misinterpreted. Instead
          # compose a value relative to the root of the repository using 
          # `**/path/from/root/of/repo/to/vcpkg.json` to match the desired `vcpkg.json`.
          vcpkgJsonGlob: '**/vcpkg.json'

          # This is needed to run `vcpkg install` command (after vcpkg is built) in
          # the directory where vcpkg.json has been located. Default is false,
          # It is highly suggested to let `run-cmake` to run vcpkg (i.e. `false`)
          # (i.e. let CMake run `vcpkg install`) using the vcpkg.cmake toolchain.
          # runVcpkgInstall: true
      - name: configure
        run: |
          source $HOME/tools/1.3.236.0/setup-env.sh
          cmake -DCMAKE_TOOLCHAIN_FILE:STRING="${{ github.workspace }}/vcpkg/scripts/buildsystems/vcpkg.cmake" -S. -Bbuild
      - name: build
        run: | 
          source $HOME/tools/1.3.236.0/setup-env.sh
          cmake --build build --target all
